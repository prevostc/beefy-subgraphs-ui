fragment Token on Token {
  address: id
  symbol
  name
  decimals
}

fragment Transaction on Transaction {
  transactionHash: id
  blockNumber
  blockTimestamp
  sender
}

fragment VaultAddresses on BeefyCLVault {
  owner
  strategy {
    address: id
  }
  createdWith {
    ...Transaction
  }
  sharesToken {
    ...Token
  }
  underlyingToken0 {
    ...Token
  }
  underlyingToken1 {
    ...Token
  }
}

fragment VaultTokens on BeefyCLVault {
  sharesToken {
    ...Token
  }
  underlyingToken0 {
    ...Token
  }
  underlyingToken1 {
    ...Token
  }
}

fragment VaultMetrics on BeefyCLVault {
  currentPriceOfToken0InToken1
  currentPriceOfToken0InUSD
  priceRangeMin1
  priceRangeMax1
  priceRangeMinUSD
  priceRangeMaxUSD
  underlyingAmount0
  underlyingAmount1
  underlyingAmount0USD
  underlyingAmount1USD
  totalValueLockedUSD
  cumulativeHarvestCount
  cumulativeDepositCount
  cumulativeWithdrawCount
  cumulativeTransferCount
  cumulativeHarvestedAmount0
  cumulativeHarvestedAmount1
  cumulativeHarvestedAmount0USD
  cumulativeHarvestedAmount1USD
  cumulativeHarvestValueUSD
  cumulativeHarvesterFeeCollectedNative
  cumulativeProtocolFeeCollectedNative
  cumulativeStrategistFeeCollectedNative
  cumulativeHarvesterFeeCollectedUSD
  cumulativeProtocolFeeCollectedUSD
  cumulativeStrategistFeeCollectedUSD
}

query VaultList {
  vaults: beefyCLVaults(where: { lifecycle: RUNNING }) {
    id
    ...VaultTokens
    ...VaultAddresses
    ...VaultMetrics
  }
}
