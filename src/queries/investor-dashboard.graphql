fragment Token on Token {
  address: id
  symbol
  name
  decimals
}

fragment Transaction on Transaction {
  transactionHash: id
  blockNumber
  blockTimestamp
  sender
}

fragment Investor on Investor {
  id
  address: id
  closedInvestmentDuration
  currentInvestmentOpenAtTimestamp
  activePositionCount
  totalPositionValueUSD
  averageDailyTotalPositionValueUSD30D
  last30DailyTotalPositionValuesUSD
  cumulativeInteractionsCount
  cumulativeDepositCount
  cumulativeWithdrawCount
  cumulativeCompoundedValueUSD
}

fragment InvestorPositionsList on Investor {
  positions(first: $first, skip: $skip) {
    ...PositionMetrics
    vault {
      id
      address: id
      ...VaultTokens
    }
    createdWith {
      ...Transaction
    }
  }
}

fragment PositionMetrics on InvestorPosition {
  id
  closedPositionDuration
  positionOpenAtTimestamp
  sharesBalance
  initialUnderlyingBalance0
  initialUnderlyingBalance1
  initialUnderlyingBalance0USD
  initialUnderlyingBalance1USD
  initialPositionValueUSD
  underlyingBalance0
  underlyingBalance1
  underlyingBalance0USD
  underlyingBalance1USD
  positionValueUSD
  averageDailyPositionValueUSD30D
  last30DailyPositionValuesUSD
  cumulativeCompoundedAmount0
  cumulativeCompoundedAmount1
  cumulativeCompoundedAmount0USD
  cumulativeCompoundedAmount1USD
  cumulativeCompoundedValueUSD
}

fragment VaultTokens on BeefyCLVault {
  sharesToken {
    ...Token
  }
  underlyingToken0 {
    ...Token
  }
  underlyingToken1 {
    ...Token
  }
  earnedToken {
    ...Token
  }
}

fragment InvestorSnapshot on InvestorSnapshot {
  id
  period
  roundedTimestamp
  timestamp
  totalPositionValueUSD
  interactionsCount
  depositCount
  withdrawCount
  compoundedValueUSD
}

fragment InvestorSnapshotList on Investor {
  dailySnapshots: snapshots(
    where: { period: 86400 }
    first: $first
    skip: $skip
  ) {
    ...InvestorSnapshot
  }
}

fragment InvestorInteractionList on Investor {
  interactions {
    ...InvestorPositionInteraction
  }
}

fragment InvestorPositionInteraction on InvestorPositionInteraction {
  id
  timestamp
  vault {
    address: id
  }
  investor {
    address: id
  }
  createdWith {
    id
    blockTimestamp
  }
  type
  sharesBalance
  underlyingBalance0
  underlyingBalance1
  underlyingBalance0USD
  underlyingBalance1USD
  positionValueUSD
  sharesBalanceDelta
  underlyingBalance0Delta
  underlyingBalance1Delta
  underlyingBalance0DeltaUSD
  underlyingBalance1DeltaUSD
  positionValueUSDDelta
}

query InvestorDashboard($address: ID!, $first: Int = 1000, $skip: Int = 0) {
  investor(id: $address) {
    ...Investor
    ...InvestorPositionsList
    ...InvestorSnapshotList
    ...InvestorInteractionList
  }
}
